<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://mohit-rocks.github.io/php-feeds/index.html</id>
    <title>osmos::feed</title>
    <updated>2021-06-17T00:59:23.194Z</updated>
    <generator>osmosfeed 1.10.2</generator>
    <link rel="alternate" href="https://mohit-rocks.github.io/php-feeds/index.html"/>
    <link rel="self" href="https://mohit-rocks.github.io/php-feeds/feed.atom"/>
    <entry>
        <title type="html"><![CDATA[Re:  Re: [RFC] is_literal]]></title>
        <id>http://news-web.php.net/php.internals/114913</id>
        <link href="http://news-web.php.net/php.internals/114913"/>
        <updated>2021-06-16T21:29:36.000Z</updated>
        <summary type="html"><![CDATA[Craig Francis]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  Re: [RFC] is_literal]]></title>
        <id>http://news-web.php.net/php.internals/114912</id>
        <link href="http://news-web.php.net/php.internals/114912"/>
        <updated>2021-06-16T21:18:52.000Z</updated>
        <summary type="html"><![CDATA[Bruce Weirdan]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  Re: [RFC] is_literal]]></title>
        <id>http://news-web.php.net/php.internals/114911</id>
        <link href="http://news-web.php.net/php.internals/114911"/>
        <updated>2021-06-16T21:01:08.000Z</updated>
        <summary type="html"><![CDATA[Craig Francis]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  Re: [RFC] is_literal]]></title>
        <id>http://news-web.php.net/php.internals/114910</id>
        <link href="http://news-web.php.net/php.internals/114910"/>
        <updated>2021-06-16T20:13:04.000Z</updated>
        <summary type="html"><![CDATA[Dik Takken]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re: [RFC] is_literal]]></title>
        <id>http://news-web.php.net/php.internals/114909</id>
        <link href="http://news-web.php.net/php.internals/114909"/>
        <updated>2021-06-16T17:24:46.000Z</updated>
        <summary type="html"><![CDATA[Craig Francis]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  [VOTE] ImmutableIterable (immutable, rewindable, allowsany key&repeating keys)]]></title>
        <id>http://news-web.php.net/php.internals/114908</id>
        <link href="http://news-web.php.net/php.internals/114908"/>
        <updated>2021-06-16T17:09:46.000Z</updated>
        <summary type="html"><![CDATA[Levi Morrison via internals]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Vote] Partial Function Application]]></title>
        <id>http://news-web.php.net/php.internals/114907</id>
        <link href="http://news-web.php.net/php.internals/114907"/>
        <updated>2021-06-16T16:16:28.000Z</updated>
        <summary type="html"><![CDATA[Larry Garfield]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  [VOTE] ImmutableIterable (immutable, rewindable, allowsany key&repeating keys)]]></title>
        <id>http://news-web.php.net/php.internals/114906</id>
        <link href="http://news-web.php.net/php.internals/114906"/>
        <updated>2021-06-16T13:57:47.000Z</updated>
        <summary type="html"><![CDATA[tyson andre]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  [RFC] New in initializers]]></title>
        <id>http://news-web.php.net/php.internals/114905</id>
        <link href="http://news-web.php.net/php.internals/114905"/>
        <updated>2021-06-16T11:47:17.000Z</updated>
        <summary type="html"><![CDATA[Larry Garfield]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  [RFC] Deprecations for PHP 8.1]]></title>
        <id>http://news-web.php.net/php.internals/114904</id>
        <link href="http://news-web.php.net/php.internals/114904"/>
        <updated>2021-06-16T11:38:39.000Z</updated>
        <summary type="html"><![CDATA[Larry Garfield]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  [VOTE] ImmutableIterable (immutable, rewindable, allowsany key&repeating keys)]]></title>
        <id>http://news-web.php.net/php.internals/114903</id>
        <link href="http://news-web.php.net/php.internals/114903"/>
        <updated>2021-06-16T09:05:43.000Z</updated>
        <summary type="html"><![CDATA[Nikita Popov]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  [RFC] New in initializers]]></title>
        <id>http://news-web.php.net/php.internals/114902</id>
        <link href="http://news-web.php.net/php.internals/114902"/>
        <updated>2021-06-16T08:16:37.000Z</updated>
        <summary type="html"><![CDATA[Nikita Popov]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  [RFC] Deprecations for PHP 8.1]]></title>
        <id>http://news-web.php.net/php.internals/114901</id>
        <link href="http://news-web.php.net/php.internals/114901"/>
        <updated>2021-06-16T03:59:08.000Z</updated>
        <summary type="html"><![CDATA[Mike Schinkel]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  [RFC] New in initializers]]></title>
        <id>http://news-web.php.net/php.internals/114900</id>
        <link href="http://news-web.php.net/php.internals/114900"/>
        <updated>2021-06-16T03:46:03.000Z</updated>
        <summary type="html"><![CDATA[Mike Schinkel]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  [VOTE] ImmutableIterable (immutable, rewindable, allows any key&repeating keys)]]></title>
        <id>http://news-web.php.net/php.internals/114899</id>
        <link href="http://news-web.php.net/php.internals/114899"/>
        <updated>2021-06-15T23:35:57.000Z</updated>
        <summary type="html"><![CDATA[Derick Rethans]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  [VOTE] ImmutableIterable (immutable, rewindable, allowsany key&repeating keys)]]></title>
        <id>http://news-web.php.net/php.internals/114898</id>
        <link href="http://news-web.php.net/php.internals/114898"/>
        <updated>2021-06-15T23:19:14.000Z</updated>
        <summary type="html"><![CDATA[tyson andre]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  [VOTE] ImmutableIterable (immutable, rewindable, allowsany key&repeating keys)]]></title>
        <id>http://news-web.php.net/php.internals/114897</id>
        <link href="http://news-web.php.net/php.internals/114897"/>
        <updated>2021-06-15T23:11:27.000Z</updated>
        <summary type="html"><![CDATA[tyson andre]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  [RFC][Draft] Add json_encode indent parameter]]></title>
        <id>http://news-web.php.net/php.internals/114896</id>
        <link href="http://news-web.php.net/php.internals/114896"/>
        <updated>2021-06-15T21:46:23.000Z</updated>
        <summary type="html"><![CDATA[Jakub Zelenka]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  Rename Fiber::this() to Fiber::getCurrent()]]></title>
        <id>http://news-web.php.net/php.internals/114895</id>
        <link href="http://news-web.php.net/php.internals/114895"/>
        <updated>2021-06-15T21:11:54.000Z</updated>
        <summary type="html"><![CDATA[Joe Watkins]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  Rename Fiber::this() to Fiber::getCurrent()]]></title>
        <id>http://news-web.php.net/php.internals/114894</id>
        <link href="http://news-web.php.net/php.internals/114894"/>
        <updated>2021-06-15T19:53:48.000Z</updated>
        <summary type="html"><![CDATA[Larry Garfield]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Rename Fiber::this() to Fiber::getCurrent()]]></title>
        <id>http://news-web.php.net/php.internals/114893</id>
        <link href="http://news-web.php.net/php.internals/114893"/>
        <updated>2021-06-15T19:01:29.000Z</updated>
        <summary type="html"><![CDATA[Aaron Piotrowski]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  [Vote] Short functions]]></title>
        <id>http://news-web.php.net/php.internals/114892</id>
        <link href="http://news-web.php.net/php.internals/114892"/>
        <updated>2021-06-15T18:36:42.000Z</updated>
        <summary type="html"><![CDATA[Larry Garfield]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  [RFC] New in initializers]]></title>
        <id>http://news-web.php.net/php.internals/114891</id>
        <link href="http://news-web.php.net/php.internals/114891"/>
        <updated>2021-06-15T16:30:20.000Z</updated>
        <summary type="html"><![CDATA[Larry Garfield]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  [RFC] New in initializers]]></title>
        <id>http://news-web.php.net/php.internals/114890</id>
        <link href="http://news-web.php.net/php.internals/114890"/>
        <updated>2021-06-15T15:06:06.000Z</updated>
        <summary type="html"><![CDATA[Nikita Popov]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  Re: [RFC] Deprecations for PHP 8.1]]></title>
        <id>http://news-web.php.net/php.internals/114889</id>
        <link href="http://news-web.php.net/php.internals/114889"/>
        <updated>2021-06-15T14:46:34.000Z</updated>
        <summary type="html"><![CDATA[Côme Chilliet]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  [VOTE] ImmutableIterable (immutable, rewindable, allowsany key&repeating keys)]]></title>
        <id>http://news-web.php.net/php.internals/114888</id>
        <link href="http://news-web.php.net/php.internals/114888"/>
        <updated>2021-06-15T14:18:19.000Z</updated>
        <summary type="html"><![CDATA[Marco Pivetta]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[[VOTE] ImmutableIterable (immutable, rewindable, allows anykey&repeating keys)]]></title>
        <id>http://news-web.php.net/php.internals/114887</id>
        <link href="http://news-web.php.net/php.internals/114887"/>
        <updated>2021-06-15T14:01:25.000Z</updated>
        <summary type="html"><![CDATA[tyson andre]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  [RFC] Deprecations for PHP 8.1]]></title>
        <id>http://news-web.php.net/php.internals/114886</id>
        <link href="http://news-web.php.net/php.internals/114886"/>
        <updated>2021-06-15T13:54:09.000Z</updated>
        <summary type="html"><![CDATA[Hans Henrik Bergan]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  [RFC] Deprecations for PHP 8.1]]></title>
        <id>http://news-web.php.net/php.internals/114885</id>
        <link href="http://news-web.php.net/php.internals/114885"/>
        <updated>2021-06-15T12:23:50.000Z</updated>
        <summary type="html"><![CDATA[Nikita Popov]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re: [RFC] Deprecations for PHP 8.1]]></title>
        <id>http://news-web.php.net/php.internals/114884</id>
        <link href="http://news-web.php.net/php.internals/114884"/>
        <updated>2021-06-15T10:53:47.000Z</updated>
        <summary type="html"><![CDATA[Nikita Popov]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  [RFC] Deprecations for PHP 8.1]]></title>
        <id>http://news-web.php.net/php.internals/114883</id>
        <link href="http://news-web.php.net/php.internals/114883"/>
        <updated>2021-06-15T10:47:56.000Z</updated>
        <summary type="html"><![CDATA[Hans Henrik Bergan]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  [RFC] is_literal]]></title>
        <id>http://news-web.php.net/php.internals/114882</id>
        <link href="http://news-web.php.net/php.internals/114882"/>
        <updated>2021-06-15T10:37:31.000Z</updated>
        <summary type="html"><![CDATA[Rowan Tommins]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  [RFC] Deprecations for PHP 8.1]]></title>
        <id>http://news-web.php.net/php.internals/114881</id>
        <link href="http://news-web.php.net/php.internals/114881"/>
        <updated>2021-06-15T10:33:30.000Z</updated>
        <summary type="html"><![CDATA[Christoph M. Becker]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  [RFC] is_literal]]></title>
        <id>http://news-web.php.net/php.internals/114880</id>
        <link href="http://news-web.php.net/php.internals/114880"/>
        <updated>2021-06-15T09:54:53.000Z</updated>
        <summary type="html"><![CDATA[Joe Watkins]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[A new major version of Laravel Event Sourcing]]></title>
        <id>https://stitcher.io/blog/a-new-major-version-of-laravel-event-sourcing</id>
        <link href="https://stitcher.io/blog/a-new-major-version-of-laravel-event-sourcing"/>
        <updated>2021-06-15T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>Today, we released a new version of <a target="_blank" href="https://github.com/spatie/laravel-event-sourcing">spatie/laravel-event-sourcing</a>, version 5 is probably one of the largest releases since the beginning of the package, we've worked several months on it and have been testing it extensively already in our own projects.</p>
<p>Credit where credit is due, many new features were inspired by <a target="_blank" href="https://docs.axoniq.io/reference-guide/">Axon</a>,<br />
a popular event sourcing framework in the Java world, and several people pitched in during the development process.</p>
<p>In this post, I'll walk you through all significant changes, but first I want to mention the course that we've built at Spatie over the last months about event sourcing. If you're working on an event sourced project or thinking about starting one, this course will be of great help. Check it out on <a target="_blank" href="https://event-sourcing-laravel.com/">https://event-sourcing-laravel.com/</a>!</p>
<p><div class="like-container">
    <div class="like placeholder">
        👍
    </div>
    <div class="like unliked hidden">
        👍
    </div>
    <div class="like liked hidden">
        👍 <span class="counter">0</span>
    </div>
</div>
</p>
<h3 id="consistent-event-handling"><a href="#consistent-event-handling" class="heading-anchor">#</a> Consistent event handling</h3>
<p>If you've used previous versions of our package, you might have struggled with how event handlers were registered across classes. Aggregate roots required you to write <code>applyEventName</code> functions, while projectors and reactors had an explicit event mapping.</p>
<p>Whatever class your writing will now register event handlers the same way: by looking at the type of the event. You don't need any more configuration or naming conventions anymore.</p>
<pre><code class="language-php hljs php" data-lang="php"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">CartAggregateRoot</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">AggregateRoot</span>
</span>{
    <span class="hljs-comment">// …</span>
    
    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">onCartAdded</span><span class="hljs-params">(<span class="hljs-highlight  type">CartAdded</span> $event)</span>: <span class="hljs-title">void</span>
    </span>{
        <span class="hljs-comment">// Any `CartAdded` event will automatically be matched to this handler</span>
    }
}</code></pre>
<pre><code class="language-php hljs php" data-lang="php"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">CartProjector</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Projector</span>
</span>{
    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">onCartAdded</span><span class="hljs-params">(<span class="hljs-highlight  type">CartAdded</span> $event)</span>: <span class="hljs-title">void</span>
    </span>{
        <span class="hljs-comment">// The same goes for projectors and reactors.</span>
    }
}</code></pre>
<h3 id="event-queries"><a href="#event-queries" class="heading-anchor">#</a> Event Queries</h3>
<p>Event queries are a new feature that allow you to easily query an event stream without building database projections. You can think of them as in-memory projections that are rebuilt every time you call them.</p>
<p>Here's an example of it in action:</p>
<pre><code class="language-php hljs php" data-lang="php"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">EarningsForProductAndPeriod</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">EventQuery</span>
</span>{
    <span class="hljs-highlight  keyword"><span class="hljs-keyword">private</span></span> <span class="hljs-highlight  type">int</span> <span class="hljs-highlight  prop">$totalPrice</span> = <span class="hljs-number">0</span>;
    
    <span class="hljs-highlight  keyword"><span class="hljs-keyword">public</span></span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span><span class="hljs-params">(
        <span class="hljs-highlight  keyword">private</span> <span class="hljs-highlight  type">Period</span> <span class="hljs-highlight  prop">$period</span>,
        <span class="hljs-highlight  keyword">private</span> <span class="hljs-highlight  type">Collection</span> <span class="hljs-highlight  prop">$products</span>
    )</span> </span>{
        <span class="hljs-highlight  type">EloquentStoredEvent</span>::<span class="hljs-highlight  prop">query</span>()
            -&gt;<span class="hljs-highlight  prop">whereEvent</span>(<span class="hljs-highlight  type">OrderCreated</span>::class)
            -&gt;<span class="hljs-highlight  prop">whereDate</span>(<span class="hljs-string">'created_at'</span>, <span class="hljs-string">'&gt;='</span>, <span class="hljs-keyword">$this</span>-&gt;<span class="hljs-highlight  prop">period</span>-&gt;<span class="hljs-highlight  prop">getStart</span>())
            -&gt;<span class="hljs-highlight  prop">whereDate</span>(<span class="hljs-string">'created_at'</span>, <span class="hljs-string">'&lt;='</span>, <span class="hljs-keyword">$this</span>-&gt;<span class="hljs-highlight  prop">period</span>-&gt;<span class="hljs-highlight  prop">getEnd</span>())
            -&gt;<span class="hljs-highlight  prop">cursor</span>()
            -&gt;<span class="hljs-highlight  prop">each</span>(
                <span class="hljs-highlight  keyword">fn</span> (<span class="hljs-highlight  type">EloquentStoredEvent</span> $event) =&gt; <span class="hljs-keyword">$this</span>-&gt;<span class="hljs-highlight  prop">apply</span>($event)
            );
    }

    <span class="hljs-keyword">protected</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">applyOrderCreated</span><span class="hljs-params">(<span class="hljs-highlight  type">OrderCreated</span> $orderCreated)</span>: <span class="hljs-title">void</span> 
    </span>{
        $orderLines = <span class="hljs-highlight  prop">collect</span>($orderCreated-&gt;<span class="hljs-highlight  prop">orderData</span>-&gt;<span class="hljs-highlight  prop">orderLineData</span>);

        $totalPriceForOrder = $orderLines
            -&gt;<span class="hljs-highlight  prop">filter</span>(<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-params">(<span class="hljs-highlight  type">OrderLineData</span> $orderLineData)</span> </span>{
                <span class="hljs-highlight  keyword"><span class="hljs-keyword">return</span></span> <span class="hljs-keyword">$this</span>-&gt;<span class="hljs-highlight  prop">products</span>-&gt;<span class="hljs-highlight  prop">first</span>(
                    <span class="hljs-highlight  keyword">fn</span>(<span class="hljs-highlight  type">Product</span> $product) =&gt; $orderLineData-&gt;<span class="hljs-highlight  prop">productEquals</span>($product)
                ) !== <span class="hljs-keyword">null</span>;
            })
            -&gt;<span class="hljs-highlight  prop">sum</span>(
                <span class="hljs-highlight  keyword">fn</span>(<span class="hljs-highlight  type">OrderLineData</span> $orderLineData) =&gt; $orderLineData-&gt;<span class="hljs-highlight  prop">totalPriceIncludingVat</span>
            );

        <span class="hljs-keyword">$this</span>-&gt;<span class="hljs-highlight  prop">totalPrice</span> += $totalPriceForOrder;
    }
}</code></pre>
<p>Note that these examples come from the <a target="_blank" href="https://event-sourcing-laravel.com/">Event Sourcing in Laravel</a> book.</p>
<h3 id="aggregate-partials"><a href="#aggregate-partials" class="heading-anchor">#</a> Aggregate Partials</h3>
<p>Aggregate partials allow you to split large aggregate roots into separate classes, while still keeping everything contained within the same aggregate. Partials can record and apply events just like an aggregate root, and can share state between them and their associated aggregate root.</p>
<p>Here's an example of an aggregate partial that handles everything related to item management within a shopping cart:</p>
<pre><code class="language-php hljs php" data-lang="php"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">CartItems</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">AggregatePartial</span>
</span>{
    <span class="hljs-comment">// …</span>
    
    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">addItem</span><span class="hljs-params">(
        <span class="hljs-highlight  type">string</span> $cartItemUuid, 
        <span class="hljs-highlight  type">Product</span> $product, 
        <span class="hljs-highlight  type">int</span> $amount
    )</span>: <span class="hljs-title">self</span> </span>{
        <span class="hljs-keyword">$this</span>-&gt;<span class="hljs-highlight  prop">recordThat</span>(<span class="hljs-keyword">new</span> <span class="hljs-highlight  type">CartItemAdded</span>(
            <span class="hljs-highlight  prop">cartItemUuid</span>: $cartItemUuid,
            <span class="hljs-highlight  prop">productUuid</span>: $product-&gt;<span class="hljs-highlight  prop">uuid</span>,
            <span class="hljs-highlight  prop">amount</span>: $amount,
        ));

        <span class="hljs-keyword">return</span> <span class="hljs-keyword">$this</span>;
    }

    <span class="hljs-keyword">protected</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">applyCartItemAdded</span><span class="hljs-params">(
        <span class="hljs-highlight  type">CartItemAdded</span> $cartItemAdded
    )</span>: <span class="hljs-title">void</span> </span>{
        <span class="hljs-keyword">$this</span>-&gt;<span class="hljs-highlight  prop">cartItems</span>[$cartItemAdded-&gt;<span class="hljs-highlight  prop">cartItemUuid</span>] = <span class="hljs-keyword">null</span>;
    }
}</code></pre>
<p>And this is how the cart aggregate root would use it:</p>
<pre><code class="language-php hljs php" data-lang="php"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">CartAggregateRoot</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">AggregateRoot</span>
</span>{
    <span class="hljs-keyword">protected</span> <span class="hljs-highlight  type">CartItems</span> <span class="hljs-highlight  prop">$cartItems</span>;

    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span><span class="hljs-params">()</span>
    </span>{
        <span class="hljs-keyword">$this</span>-&gt;<span class="hljs-highlight  prop">cartItems</span> = <span class="hljs-keyword">new</span> <span class="hljs-highlight  type">CartItems</span>(<span class="hljs-keyword">$this</span>);
    }

    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">addItem</span><span class="hljs-params">(
        <span class="hljs-highlight  type">string</span> $cartItemUuid,
        <span class="hljs-highlight  type">Product</span> $product,
        <span class="hljs-highlight  type">int</span> $amount
    )</span>: <span class="hljs-title">self</span> </span>{
        <span class="hljs-keyword">if</span> (! <span class="hljs-keyword">$this</span>-&gt;<span class="hljs-highlight  prop">state</span>-&gt;<span class="hljs-highlight  prop">changesAllowed</span>()) {
            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-highlight  type">CartCannotBeChanged</span>();
        }

        <span class="hljs-keyword">$this</span>-&gt;<span class="hljs-highlight  prop">cartItems</span>-&gt;<span class="hljs-highlight  prop">addItem</span>($cartItemUuid, $product, $amount);

        <span class="hljs-keyword">return</span> <span class="hljs-keyword">$this</span>;
    }</code></pre>
<p>Aggregate partials come with the same testing capabilities as aggregate roots, and are a useful way of keeping aggregate-related code maintainable.</p>
<h3 id="command-bus"><a href="#command-bus" class="heading-anchor">#</a> Command bus</h3>
<p>We've added a command bus that can automatically map commands to handlers on aggregate roots:</p>
<pre><code class="language-php hljs php" data-lang="php"><span class="hljs-keyword">namespace</span> <span class="hljs-highlight  type"><span class="hljs-title">Spatie</span>\<span class="hljs-title">Shop</span>\<span class="hljs-title">Cart</span>\<span class="hljs-title">Commands</span></span>;

<span class="hljs-keyword">use</span> <span class="hljs-highlight  type"><span class="hljs-title">Spatie</span>\<span class="hljs-title">Shop</span>\<span class="hljs-title">Support</span>\<span class="hljs-title">EventSourcing</span>\<span class="hljs-title">Attributes</span>\<span class="hljs-title">AggregateUuid</span></span>;
<span class="hljs-keyword">use</span> <span class="hljs-highlight  type"><span class="hljs-title">Spatie</span>\<span class="hljs-title">Shop</span>\<span class="hljs-title">Support</span>\<span class="hljs-title">EventSourcing</span>\<span class="hljs-title">Attributes</span>\<span class="hljs-title">HandledBy</span></span>;
<span class="hljs-keyword">use</span> <span class="hljs-highlight  type"><span class="hljs-title">Spatie</span>\<span class="hljs-title">Shop</span>\<span class="hljs-title">Support</span>\<span class="hljs-title">EventSourcing</span>\<span class="hljs-title">Commands</span>\<span class="hljs-title">Command</span></span>;

<span class="hljs-comment">#[<span class="hljs-highlight  type">HandledBy</span>(<span class="hljs-highlight  type">CartAggregateRoot</span><span class="hljs-highlight  text">::class</span>)]</span>
<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AddCartItem</span> <span class="hljs-keyword">implements</span> <span class="hljs-title">Command</span>
</span>{
    <span class="hljs-highlight  keyword"><span class="hljs-keyword">public</span></span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span><span class="hljs-params">(
        <span class="hljs-highlight  comment">#[<span class="hljs-highlight  type">AggregateUuid</span>]</span> <span class="hljs-highlight  keyword">public</span> <span class="hljs-highlight  type">string</span> <span class="hljs-highlight  prop">$cartUuid</span>,
        <span class="hljs-highlight  keyword">public</span> <span class="hljs-highlight  type">string</span> <span class="hljs-highlight  prop">$cartItemUuid</span>,
        <span class="hljs-highlight  keyword">public</span> <span class="hljs-highlight  type">Product</span> <span class="hljs-highlight  prop">$product</span>,
        <span class="hljs-highlight  keyword">public</span> <span class="hljs-highlight  type">int</span> <span class="hljs-highlight  prop">$amount</span>,
    )</span> </span>{
    }
}</code></pre>
<p>Whenever this command is dispatched, it will automatically be captured and handled by the associated aggregate root. It even works with aggregate partials:</p>
<pre><code class="language-php hljs php" data-lang="php"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">CartItems</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">AggregatePartial</span>
</span>{
    <span class="hljs-comment">// …</span>
    
    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">addItem</span><span class="hljs-params">(<span class="hljs-highlight  type">AddCartItem</span> $addCartItem)</span>: <span class="hljs-title">self</span>
    </span>{
        <span class="hljs-comment">// …</span>
    }
    
    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">removeItem</span><span class="hljs-params">(<span class="hljs-highlight  type">RemoveCartItem</span> $removeCartItem)</span>: <span class="hljs-title">self</span>
    </span>{
        <span class="hljs-comment">// …</span>
    }
}    </code></pre>
<hr />
<p>Besides these new features, there are also some quality-of-life changes across the board:</p>
<ul>
<li>The minimum required PHP version is now 8.0</li>
<li>The minimum required Laravel version is now 8.0</li>
<li>There's better support for <a target="_blank" href="https://github.com/spatie/laravel-event-sourcing/discussions/214">handling concurrency</a> within the same aggregate root instance</li>
<li>There's a way to <a target="_blank" href="https://github.com/spatie/laravel-event-sourcing/discussions/181">fake reactors and projectors</a>
</li>
<li>There's an <a target="_blank" href="https://github.com/spatie/laravel-event-sourcing/blob/main/src/StoredEvents/Models/EloquentStoredEventQueryBuilder.php">improved event query builder</a>
</li>
<li>And <a target="_blank" href="https://github.com/spatie/laravel-event-sourcing/blob/v5/CHANGELOG.md">more</a>
</li>
</ul>
<hr />
<p>All in all, I'm very exited for this new release. All the new features are also used in our real-life projects, so we know from experience how useful they are in complex applications. Of course, a blog post can't discuss all the details and the thought process behind this new version, so make sure to read <a target="_blank" href="https://event-sourcing-laravel.com/">the book</a> if you want in-depth knowledge about all of these features, and more.</p>
<p><div class="author">
    Noticed a tpyo? You can submit a
    <a href="https://github.com/brendt/stitcher.io" target="_blank" rel="noopener noreferrer">PR</a> to fix it.

    If you want to stay up to date about what's happening on this blog, you can follow me
    <a href="https://mobile.twitter.com/brendt_gd" target="_blank" rel="noopener noreferrer">on Twitter</a> or subscribe to my newsletter:

    <form action="https://mail.stitcher.io/subscribe/81fa83d0-4a0b-4eff-b897-f6ce51dfb7f0" method="post" class="newsletter-form">
        <label for="newsletter-email-1">Email</label>
        <input type="email" name="email" id="newsletter-email-1"/>
        <button type="submit" class="cta cta-small">Subscribe</button>
    </form>
</div>
</p>]]></summary>
        <author>
            <name>stitcher.io</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  Allow objects in define()]]></title>
        <id>http://news-web.php.net/php.internals/114873</id>
        <link href="http://news-web.php.net/php.internals/114873"/>
        <updated>2021-06-14T23:36:35.000Z</updated>
        <summary type="html"><![CDATA[Paul Dragoonis]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  [RFC] is_literal]]></title>
        <id>http://news-web.php.net/php.internals/114872</id>
        <link href="http://news-web.php.net/php.internals/114872"/>
        <updated>2021-06-14T22:32:39.000Z</updated>
        <summary type="html"><![CDATA[Claude Pache]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  [RFC] is_literal]]></title>
        <id>http://news-web.php.net/php.internals/114871</id>
        <link href="http://news-web.php.net/php.internals/114871"/>
        <updated>2021-06-14T20:52:38.000Z</updated>
        <summary type="html"><![CDATA[Matthew Brown]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  [RFC] is_literal]]></title>
        <id>http://news-web.php.net/php.internals/114870</id>
        <link href="http://news-web.php.net/php.internals/114870"/>
        <updated>2021-06-14T19:16:27.000Z</updated>
        <summary type="html"><![CDATA[Mike Schinkel]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  Allow objects in define()]]></title>
        <id>http://news-web.php.net/php.internals/114869</id>
        <link href="http://news-web.php.net/php.internals/114869"/>
        <updated>2021-06-14T18:47:05.000Z</updated>
        <summary type="html"><![CDATA[Larry Garfield]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  [RFC] is_literal]]></title>
        <id>http://news-web.php.net/php.internals/114868</id>
        <link href="http://news-web.php.net/php.internals/114868"/>
        <updated>2021-06-14T18:43:52.000Z</updated>
        <summary type="html"><![CDATA[Rowan Tommins]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  Allow objects in define()]]></title>
        <id>http://news-web.php.net/php.internals/114867</id>
        <link href="http://news-web.php.net/php.internals/114867"/>
        <updated>2021-06-14T16:02:03.000Z</updated>
        <summary type="html"><![CDATA[Marco Pivetta]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  [RFC] is_literal]]></title>
        <id>http://news-web.php.net/php.internals/114866</id>
        <link href="http://news-web.php.net/php.internals/114866"/>
        <updated>2021-06-14T15:06:50.000Z</updated>
        <summary type="html"><![CDATA[Craig Francis]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  Allow objects in define()]]></title>
        <id>http://news-web.php.net/php.internals/114865</id>
        <link href="http://news-web.php.net/php.internals/114865"/>
        <updated>2021-06-14T15:01:43.000Z</updated>
        <summary type="html"><![CDATA[Nikita Popov]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  Allow objects in define()]]></title>
        <id>http://news-web.php.net/php.internals/114864</id>
        <link href="http://news-web.php.net/php.internals/114864"/>
        <updated>2021-06-14T14:42:40.000Z</updated>
        <summary type="html"><![CDATA[Marco Pivetta]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Allow objects in define()]]></title>
        <id>http://news-web.php.net/php.internals/114863</id>
        <link href="http://news-web.php.net/php.internals/114863"/>
        <updated>2021-06-14T14:35:00.000Z</updated>
        <summary type="html"><![CDATA[Nikita Popov]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  [RFC] is_literal]]></title>
        <id>http://news-web.php.net/php.internals/114862</id>
        <link href="http://news-web.php.net/php.internals/114862"/>
        <updated>2021-06-14T13:30:19.000Z</updated>
        <summary type="html"><![CDATA[Craig Francis]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  [RFC] is_literal]]></title>
        <id>http://news-web.php.net/php.internals/114861</id>
        <link href="http://news-web.php.net/php.internals/114861"/>
        <updated>2021-06-14T13:29:59.000Z</updated>
        <summary type="html"><![CDATA[Marco Pivetta]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  [RFC] is_literal]]></title>
        <id>http://news-web.php.net/php.internals/114860</id>
        <link href="http://news-web.php.net/php.internals/114860"/>
        <updated>2021-06-14T13:27:47.000Z</updated>
        <summary type="html"><![CDATA[Thomas Nunninger]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  [RFC] is_literal]]></title>
        <id>http://news-web.php.net/php.internals/114859</id>
        <link href="http://news-web.php.net/php.internals/114859"/>
        <updated>2021-06-14T13:06:08.000Z</updated>
        <summary type="html"><![CDATA[Matthew Brown]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  [RFC] is_literal]]></title>
        <id>http://news-web.php.net/php.internals/114858</id>
        <link href="http://news-web.php.net/php.internals/114858"/>
        <updated>2021-06-14T12:29:53.000Z</updated>
        <summary type="html"><![CDATA[Dan Ackroyd]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  [RFC] is_literal]]></title>
        <id>http://news-web.php.net/php.internals/114857</id>
        <link href="http://news-web.php.net/php.internals/114857"/>
        <updated>2021-06-14T10:53:24.000Z</updated>
        <summary type="html"><![CDATA[Dik Takken]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  [RFC] is_literal]]></title>
        <id>http://news-web.php.net/php.internals/114856</id>
        <link href="http://news-web.php.net/php.internals/114856"/>
        <updated>2021-06-14T09:36:30.000Z</updated>
        <summary type="html"><![CDATA[Craig Francis]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  [RFC] is_literal]]></title>
        <id>http://news-web.php.net/php.internals/114855</id>
        <link href="http://news-web.php.net/php.internals/114855"/>
        <updated>2021-06-14T09:36:24.000Z</updated>
        <summary type="html"><![CDATA[Craig Francis]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  Re: [RFC] Under Discussion: Add Random class andRandomNumberGenerator interface]]></title>
        <id>http://news-web.php.net/php.internals/114854</id>
        <link href="http://news-web.php.net/php.internals/114854"/>
        <updated>2021-06-14T09:31:18.000Z</updated>
        <summary type="html"><![CDATA[Guilliam Xavier]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  [RFC] is_literal]]></title>
        <id>http://news-web.php.net/php.internals/114850</id>
        <link href="http://news-web.php.net/php.internals/114850"/>
        <updated>2021-06-14T00:41:09.000Z</updated>
        <summary type="html"><![CDATA[Mike Schinkel]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  [RFC] is_literal]]></title>
        <id>http://news-web.php.net/php.internals/114849</id>
        <link href="http://news-web.php.net/php.internals/114849"/>
        <updated>2021-06-14T00:20:41.000Z</updated>
        <summary type="html"><![CDATA[Craig Francis]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  [RFC] is_literal]]></title>
        <id>http://news-web.php.net/php.internals/114848</id>
        <link href="http://news-web.php.net/php.internals/114848"/>
        <updated>2021-06-13T21:30:06.000Z</updated>
        <summary type="html"><![CDATA[Matthew Brown]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  [RFC] is_literal]]></title>
        <id>http://news-web.php.net/php.internals/114847</id>
        <link href="http://news-web.php.net/php.internals/114847"/>
        <updated>2021-06-13T20:12:07.000Z</updated>
        <summary type="html"><![CDATA[Craig Francis]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  [RFC] is_literal]]></title>
        <id>http://news-web.php.net/php.internals/114846</id>
        <link href="http://news-web.php.net/php.internals/114846"/>
        <updated>2021-06-13T19:46:47.000Z</updated>
        <summary type="html"><![CDATA[someniatko]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  [RFC] make Reflection*#setAccessible() no-op]]></title>
        <id>http://news-web.php.net/php.internals/114845</id>
        <link href="http://news-web.php.net/php.internals/114845"/>
        <updated>2021-06-13T19:15:53.000Z</updated>
        <summary type="html"><![CDATA[tyson andre]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  [RFC] make Reflection*#setAccessible() no-op]]></title>
        <id>http://news-web.php.net/php.internals/114844</id>
        <link href="http://news-web.php.net/php.internals/114844"/>
        <updated>2021-06-13T18:56:39.000Z</updated>
        <summary type="html"><![CDATA[Marco Pivetta]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  [RFC] make Reflection*#setAccessible() no-op]]></title>
        <id>http://news-web.php.net/php.internals/114843</id>
        <link href="http://news-web.php.net/php.internals/114843"/>
        <updated>2021-06-13T18:46:12.000Z</updated>
        <summary type="html"><![CDATA[Larry Garfield]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  [RFC] is_literal]]></title>
        <id>http://news-web.php.net/php.internals/114842</id>
        <link href="http://news-web.php.net/php.internals/114842"/>
        <updated>2021-06-13T16:51:36.000Z</updated>
        <summary type="html"><![CDATA[Craig Francis]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[[RFC] make Reflection*#setAccessible() no-op]]></title>
        <id>http://news-web.php.net/php.internals/114841</id>
        <link href="http://news-web.php.net/php.internals/114841"/>
        <updated>2021-06-13T16:44:29.000Z</updated>
        <summary type="html"><![CDATA[Marco Pivetta]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  [RFC] is_literal]]></title>
        <id>http://news-web.php.net/php.internals/114840</id>
        <link href="http://news-web.php.net/php.internals/114840"/>
        <updated>2021-06-13T06:46:35.000Z</updated>
        <summary type="html"><![CDATA[Mike Schinkel]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  [RFC] is_literal]]></title>
        <id>http://news-web.php.net/php.internals/114839</id>
        <link href="http://news-web.php.net/php.internals/114839"/>
        <updated>2021-06-12T20:45:55.000Z</updated>
        <summary type="html"><![CDATA[Lauri_Kenttä]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  [RFC] is_literal]]></title>
        <id>http://news-web.php.net/php.internals/114838</id>
        <link href="http://news-web.php.net/php.internals/114838"/>
        <updated>2021-06-12T19:21:19.000Z</updated>
        <summary type="html"><![CDATA[Craig Francis]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  [RFC] is_literal]]></title>
        <id>http://news-web.php.net/php.internals/114837</id>
        <link href="http://news-web.php.net/php.internals/114837"/>
        <updated>2021-06-12T18:59:23.000Z</updated>
        <summary type="html"><![CDATA[Lauri_Kenttä]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  [RFC] is_literal]]></title>
        <id>http://news-web.php.net/php.internals/114836</id>
        <link href="http://news-web.php.net/php.internals/114836"/>
        <updated>2021-06-12T17:45:53.000Z</updated>
        <summary type="html"><![CDATA[Joe Watkins]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[[RFC] is_literal]]></title>
        <id>http://news-web.php.net/php.internals/114835</id>
        <link href="http://news-web.php.net/php.internals/114835"/>
        <updated>2021-06-12T17:00:12.000Z</updated>
        <summary type="html"><![CDATA[Craig Francis]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  Re: RFC: CachedIterable (rewindable, allows anykey&repeating keys)]]></title>
        <id>http://news-web.php.net/php.internals/114834</id>
        <link href="http://news-web.php.net/php.internals/114834"/>
        <updated>2021-06-12T15:20:05.000Z</updated>
        <summary type="html"><![CDATA[tyson andre]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  Re: [RFC] Under Discussion: Add Random class andRandomNumberGenerator interface]]></title>
        <id>http://news-web.php.net/php.internals/114833</id>
        <link href="http://news-web.php.net/php.internals/114833"/>
        <updated>2021-06-12T10:30:17.000Z</updated>
        <summary type="html"><![CDATA[Go Kudo]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Zend Engine License in PHP source code]]></title>
        <id>http://news-web.php.net/php.internals/114832</id>
        <link href="http://news-web.php.net/php.internals/114832"/>
        <updated>2021-06-11T17:22:46.000Z</updated>
        <summary type="html"><![CDATA[Patrick ALLAERT]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  [RFC] New in initializers]]></title>
        <id>http://news-web.php.net/php.internals/114831</id>
        <link href="http://news-web.php.net/php.internals/114831"/>
        <updated>2021-06-11T15:02:03.000Z</updated>
        <summary type="html"><![CDATA[Larry Garfield]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  [RFC] Partial Function Application, take 2]]></title>
        <id>http://news-web.php.net/php.internals/114830</id>
        <link href="http://news-web.php.net/php.internals/114830"/>
        <updated>2021-06-11T12:41:59.000Z</updated>
        <summary type="html"><![CDATA[Joe Watkins]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  [VOTE] Deprecate autovivification on false]]></title>
        <id>http://news-web.php.net/php.internals/114829</id>
        <link href="http://news-web.php.net/php.internals/114829"/>
        <updated>2021-06-11T12:13:49.000Z</updated>
        <summary type="html"><![CDATA[Kamil Tekiela]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  [RFC] Partial Function Application, take 2]]></title>
        <id>http://news-web.php.net/php.internals/114828</id>
        <link href="http://news-web.php.net/php.internals/114828"/>
        <updated>2021-06-11T11:01:43.000Z</updated>
        <summary type="html"><![CDATA[Guilliam Xavier]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  [VOTE] Deprecate autovivification on false]]></title>
        <id>http://news-web.php.net/php.internals/114827</id>
        <link href="http://news-web.php.net/php.internals/114827"/>
        <updated>2021-06-11T09:47:42.000Z</updated>
        <summary type="html"><![CDATA[Dmitry Stogov]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  [VOTE] Deprecate autovivification on false]]></title>
        <id>http://news-web.php.net/php.internals/114826</id>
        <link href="http://news-web.php.net/php.internals/114826"/>
        <updated>2021-06-11T09:19:57.000Z</updated>
        <summary type="html"><![CDATA[Claude Pache]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  [VOTE] Deprecate autovivification on false]]></title>
        <id>http://news-web.php.net/php.internals/114825</id>
        <link href="http://news-web.php.net/php.internals/114825"/>
        <updated>2021-06-11T06:58:17.000Z</updated>
        <summary type="html"><![CDATA[Dmitry Stogov]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  [RFC] Partial Function Application, take 2]]></title>
        <id>http://news-web.php.net/php.internals/114824</id>
        <link href="http://news-web.php.net/php.internals/114824"/>
        <updated>2021-06-10T19:41:56.000Z</updated>
        <summary type="html"><![CDATA[Jordi Boggiano]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  [RFC] Partial Function Application, take 2]]></title>
        <id>http://news-web.php.net/php.internals/114823</id>
        <link href="http://news-web.php.net/php.internals/114823"/>
        <updated>2021-06-10T18:35:39.000Z</updated>
        <summary type="html"><![CDATA[Guilliam Xavier]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  [RFC] Partial Function Application, take 2]]></title>
        <id>http://news-web.php.net/php.internals/114822</id>
        <link href="http://news-web.php.net/php.internals/114822"/>
        <updated>2021-06-10T18:34:49.000Z</updated>
        <summary type="html"><![CDATA[Dan Ackroyd]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  [RFC] Partial Function Application, take 2]]></title>
        <id>http://news-web.php.net/php.internals/114821</id>
        <link href="http://news-web.php.net/php.internals/114821"/>
        <updated>2021-06-10T17:32:21.000Z</updated>
        <summary type="html"><![CDATA[Guilliam Xavier]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re: PHP 8.0.0alpha1 is available for testing]]></title>
        <id>http://news-web.php.net/php.internals/114820</id>
        <link href="http://news-web.php.net/php.internals/114820"/>
        <updated>2021-06-10T15:56:07.000Z</updated>
        <summary type="html"><![CDATA[Ben Ramsey]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  Re: RFC: CachedIterable (rewindable, allows anykey&repeating keys)]]></title>
        <id>http://news-web.php.net/php.internals/114819</id>
        <link href="http://news-web.php.net/php.internals/114819"/>
        <updated>2021-06-10T15:54:14.000Z</updated>
        <summary type="html"><![CDATA[Levi Morrison via internals]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  PHP 8.0.0alpha1 is available for testing]]></title>
        <id>http://news-web.php.net/php.internals/114818</id>
        <link href="http://news-web.php.net/php.internals/114818"/>
        <updated>2021-06-10T15:51:27.000Z</updated>
        <summary type="html"><![CDATA[Patrick ALLAERT]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  Re: Allow combining arg unpacking and named args]]></title>
        <id>http://news-web.php.net/php.internals/114817</id>
        <link href="http://news-web.php.net/php.internals/114817"/>
        <updated>2021-06-10T15:50:07.000Z</updated>
        <summary type="html"><![CDATA[Levi Morrison via internals]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[PHP 8.0.0alpha1 is available for testing]]></title>
        <id>http://news-web.php.net/php.internals/114816</id>
        <link href="http://news-web.php.net/php.internals/114816"/>
        <updated>2021-06-10T15:45:59.000Z</updated>
        <summary type="html"><![CDATA[Ben Ramsey]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  Re: Allow combining arg unpacking and named args]]></title>
        <id>http://news-web.php.net/php.internals/114815</id>
        <link href="http://news-web.php.net/php.internals/114815"/>
        <updated>2021-06-10T14:53:28.000Z</updated>
        <summary type="html"><![CDATA[Larry Garfield]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  Re: RFC: CachedIterable (rewindable, allows anykey&repeating keys)]]></title>
        <id>http://news-web.php.net/php.internals/114814</id>
        <link href="http://news-web.php.net/php.internals/114814"/>
        <updated>2021-06-10T14:39:59.000Z</updated>
        <summary type="html"><![CDATA[Pierre]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  [RFC] Partial Function Application, take 2]]></title>
        <id>http://news-web.php.net/php.internals/114813</id>
        <link href="http://news-web.php.net/php.internals/114813"/>
        <updated>2021-06-10T14:33:57.000Z</updated>
        <summary type="html"><![CDATA[Larry Garfield]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Re:  Re: RFC: CachedIterable (rewindable, allows anykey&repeating keys)]]></title>
        <id>http://news-web.php.net/php.internals/114812</id>
        <link href="http://news-web.php.net/php.internals/114812"/>
        <updated>2021-06-10T14:16:11.000Z</updated>
        <summary type="html"><![CDATA[tyson andre]]></summary>
        <author>
            <name>news-web.php.net: php.internals</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Why we need multi-line short closures in PHP]]></title>
        <id>https://stitcher.io/blog/why-we-need-multi-line-short-closures-in-php</id>
        <link href="https://stitcher.io/blog/why-we-need-multi-line-short-closures-in-php"/>
        <updated>2021-06-03T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p><a href="/blog/new-in-php-81">PHP 8.1</a> is already taking shape quite well, yet there's one feature I'd love to see added, that's still being discussed: multi-line short closures. The <a target="_blank" href="https://wiki.php.net/rfc/auto-capture-closure">RFC</a> calls them "Auto-capturing multi-statement closures" but I hope you don't mind me using the somewhat shorter name.</p>
<p>If you're on an <a target="_blank" href="https://www.php.net/supported-versions.php">actively supported</a> PHP version, you already know about <a href="/blog/short-closures-in-php">short closures</a> — a.k.a. "arrow functions". And, most importantly, one of their biggest drawbacks: they only <a href="/blog/short-closures-in-php#no-multi-line">support one-line expressions</a>, which are also used as the return value.</p>
<p>The multi-line short closures RFC by <a target="_blank" href="https://twitter.com/enunomaduro">Nuno</a> and <a target="_blank" href="https://twitter.com/crell">Larry</a> aims to solve that problem, in — what I think is — an elegant way.</p>
<p>Some people are skeptical about this RFC though, and I want to address their arguments and share why I think it's still a worthwhile addition. Though first, I'll show you what the RFC is about. Keep in mind this is a proposal, and not added to PHP yet!</p>
<p><div class="ad-container">
    <script async type="text/javascript" src="//cdn.carbonads.com/carbon.js?serve=CK7ICK3W&placement=stitcherio" id="_carbonads_js"></script>
</div>
</p>
<p>A quick refresher, this is what arrow functions in PHP look like today:</p>
<pre><code class="language-php hljs php" data-lang="php">$getTitle = <span class="hljs-highlight  keyword">fn</span> (<span class="hljs-highlight  type">Post</span> $post) =&gt; $post-&gt;<span class="hljs-highlight  prop">title</span>;</code></pre>
<p>And this is what the RFC proposes:</p>
<pre><code class="language-php hljs php" data-lang="php">$date = <span class="hljs-highlight  prop">now</span>();

$getSlug = <span class="hljs-highlight  keyword">fn</span> (<span class="hljs-highlight  type">Post</span> $post) {
    $slug = <span class="hljs-highlight  type">Str</span>::<span class="hljs-highlight  prop">slug</span>($post-&gt;<span class="hljs-highlight  prop">title</span>);
    
    <span class="hljs-keyword">return</span> $date . $slug;
}</code></pre>
<p>There are two important things to note about multi-line short closures:</p>
<ul>
<li>they have access to the variables in the upper scope without needing <code><span class="hljs-highlight  keyword">use</span></code>; and</li>
<li>they <em>don't</em> automatically return the last expression, which makes sense since there can be several expressions in a multi-line closure.</li>
</ul>
<p>You might have already noticed it, but the RFC introduces an elegant kind of symmetry in how you can create closures:</p>
<ul>
<li>on the one hand there's <code><span class="hljs-highlight  keyword">function</span></code> and <code><span class="hljs-highlight  keyword">fn</span></code>, the first one doesn't auto-capture variables from the outside, the second one does; and</li>
<li>on the other hand there's <code>{ … }</code> or <code>=></code>, using curly brackets allow you to write multiple lines, while <code>=></code> only accepts one expression, but also returns it.</li>
</ul>
<p>Because of this symmetry, all of the following code samples are possible and all of them behaving a little differently.</p>
<p>Here's a closure that doesn't auto-capture outer scope, with multiple lines:</p>
<pre><code class="language-php hljs php" data-lang="php">$date = <span class="hljs-highlight  prop">now</span>();

$getSlug = <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-params">(<span class="hljs-highlight  type">Post</span> $post)</span> <span class="hljs-title">use</span> <span class="hljs-params">($date)</span> </span>{
    $slug = <span class="hljs-highlight  type">Str</span>::<span class="hljs-highlight  prop">slug</span>($post-&gt;<span class="hljs-highlight  prop">title</span>);
    
    <span class="hljs-keyword">return</span> $date . $slug;
}</code></pre>
<p>Next, a closure that does capture outer scope and immediately returns the result:</p>
<pre><code class="language-php hljs php" data-lang="php">$date = <span class="hljs-highlight  prop">now</span>();

$getSlug = <span class="hljs-highlight  keyword">fn</span> (<span class="hljs-highlight  type">Post</span> $post) =&gt; $date . <span class="hljs-highlight  type">Str</span>::<span class="hljs-highlight  prop">slug</span>($post-&gt;<span class="hljs-highlight  prop">title</span>);</code></pre>
<p>And finally — proposed by the RFC — a closure that does capture outer scope, but still allows multiple lines:</p>
<pre><code class="language-php hljs php" data-lang="php">$date = <span class="hljs-highlight  prop">now</span>();

$getSlug = <span class="hljs-highlight  keyword">fn</span> (<span class="hljs-highlight  type">Post</span> $post) {
    $slug = <span class="hljs-highlight  type">Str</span>::<span class="hljs-highlight  prop">slug</span>($post-&gt;<span class="hljs-highlight  prop">title</span>);
    
    <span class="hljs-keyword">return</span> $date . $slug;
}</code></pre>
<p>If you're counting, you know that one option is still missing: a closure that doesn't auto-capture outer scope and immediately returns a value:</p>
<pre><code class="language-txt">$date = <span class="hljs-highlight  prop">now</span>();

$getSlug = <span class="hljs-highlight  keyword">function</span> (<span class="hljs-highlight  type">Post</span> $post) <span class="hljs-highlight  keyword">use</span> ($date) 
    =&gt; $date . <span class="hljs-highlight  type">Str</span>::<span class="hljs-highlight  prop">slug</span>($post-&gt;<span class="hljs-highlight  prop">title</span>);</code></pre>
<p>The RFC lists this last one as a possible future addition, but doesn't cover it right now.</p>
<hr />
<p>With the background info out of the way, let's look at some counter arguments as to why some people don't like this change.</p>
<h3 id="auto-capturing-outer-scope-can-lead-to-bugs"><a href="#auto-capturing-outer-scope-can-lead-to-bugs" class="heading-anchor">#</a> Auto-capturing outer scope can lead to bugs</h3>
<p>Some people voice their fear about auto-capturing variables from the outer scope, especially that it can lead to unclear code in the long run and thus, bugs.</p>
<p>I've got a few arguments against that fear.</p>
<p>First, auto-capturing is already supported by PHP in the current short closures, there's nothing about this RFC that changes that. The arrow function RFC passed with 51 votes for, and 8 against after a <a target="_blank" href="https://externals.io/message/104693#104693">thorough discussion</a>, and has been used extensively in lots of projects since — take a look at some popular OSS frameworks if you want some examples. Clear signs that this particular behaviour is wanted by the majority of people, whether you're afraid of it or not.</p>
<p>Nikita also shares this opinion:</p>
<blockquote>
<p>I'm generally in favor of supporting auto-capture for multi-line closures. I think that extensive experience in other programming languages has shown that auto-capture does not hinder readability of code, and I don't see any particular reason why the effects in PHP would be different. — <a target="_blank" href="https://externals.io/message/113740#114239">https://externals.io/message/113740#114239</a></p>
</blockquote>
<p>Auto-capturing outer scope might not be your preferred way of coding, but that doesn't mean the idea should be dismissed, as there are many people who <em>do</em> prefer this style.</p>
<p>Fear should never be the driving force in a programming language's design, we should look at facts instead.</p>
<p><div class="author">
    Noticed a tpyo? You can submit a
    <a href="https://github.com/brendt/stitcher.io" target="_blank" rel="noopener noreferrer">PR</a> to fix it.

    If you want to stay up to date about what's happening on this blog, you can follow me
    <a href="https://mobile.twitter.com/brendt_gd" target="_blank" rel="noopener noreferrer">on Twitter</a> or subscribe to my newsletter:

    <form action="https://mail.stitcher.io/subscribe/81fa83d0-4a0b-4eff-b897-f6ce51dfb7f0" method="post" class="newsletter-form">
        <label for="newsletter-email-2">Email</label>
        <input type="email" name="email" id="newsletter-email-2"/>
        <button type="submit" class="cta cta-small">Subscribe</button>
    </form>
</div>
</p>
<h3 id="by-value-or-by-reference-passing"><a href="#by-value-or-by-reference-passing" class="heading-anchor">#</a> By-value or by-reference passing</h3>
<p>I believe the RFC gets it right when it says that outer-scope variables are always captured by-value, and not by-reference. This means that you won't be able to change the value of an outer-scope variable from within your closure — a good thing.</p>
<p>People might argue that this will cause confusion, because what happens if you <em>do</em> want to change the outer-scope variable? We could discuss about whether this would ever be a good idea or not, but it doesn't even matter since PHP already has the answer — remember that symmetry I talked about earlier?</p>
<p>If you want by-reference passing, you'll need to specifically say which variables you want access to — which is exactly what <code><span class="hljs-highlight  keyword">function</span></code> allows:</p>
<pre><code class="language-txt">$date = <span class="hljs-highlight  prop">now</span>();

$getSlug = <span class="hljs-highlight  keyword">function</span> (<span class="hljs-highlight  type">Post</span> $post) <span class="hljs-highlight  keyword">use</span> (&amp;$date) {
    $date = <span class="hljs-highlight  prop">now</span>()-&gt;<span class="hljs-highlight  prop">addDay</span>();
    
    <span class="hljs-highlight  comment">// Please don't do this…</span>
}</code></pre>
<p>I'd argue that this RFC creates clear boundaries between what's possible with <code><span class="hljs-highlight  keyword">function</span></code> and <code><span class="hljs-highlight  keyword">fn</span></code>. It doesn't cause confusion; on the contrary: it creates consistency and clarity within PHP's syntax.</p>
<h3 id="there's-little-space-to-be-gained"><a href="#there's-little-space-to-be-gained" class="heading-anchor">#</a> There's little space to be gained</h3>
<p>Some people argue that there's no need for adding multi-line short closures because there's little to be gained when it comes to the amount of characters you're writing. That might be true if you're not relying on outer-scope values, but to be honest it's not about how many characters you write.</p>
<p>This RFC makes the language's syntax more consistent, and a consistent language allows for easier programming.</p>
<p>When writing code, I don't want to be bothered with having to change <code><span class="hljs-highlight  keyword">fn</span></code> to <code><span class="hljs-highlight  keyword">function</span></code> when refactoring a closure that suddenly does need to be written on two lines instead of the prior one.</p>
<p>It might seem like such a small detail, but it's those details that impact our day-by-day developer life. And isn't that what a maturing language should be about? Look at features like property promotion, named arguments, enums, attributes, the match operator, etc. You could argue that none of those feature are "necessary" to write working PHP code, but still they do improve my day-by-day life significantly — and I hope yours too.</p>
<h3 id="holding-on-to-the-past"><a href="#holding-on-to-the-past" class="heading-anchor">#</a> Holding on to the past</h3>
<p>Finally, some people might find it difficult to deal with change, and you really need to ask yourself that question if you're voting on RFCs. Yes, you might not see a need for a given feature but you're not only voting for yourself, you have a responsibility to the PHP community; there's more to this than just your projects and your team.</p>
<p>Do you know why closures right now don't auto-import variables from the outer scope? You might have gotten used to it, but do you know why they were designed this way 12 years ago? Larry <a target="_blank" href="https://externals.io/message/113740#113780">did some digging</a> in the mailing list archives, and discovered there were three reasons why <code><span class="hljs-highlight  keyword">use</span></code> was introduced in the first place:</p>
<ul>
<li>there were performance concerns if variables of the outer-scope were auto-captured — concerns that are no longer relevant today;</li>
<li>it was used to avoid surprise by-reference value passing — which also isn't a problem since we're always using by-value passing; and</li>
<li>it allowed users to explicitly capture variables by-value or by-reference, which is now cleanly solved because of the distinction between <code><span class="hljs-highlight  keyword">function</span></code> and <code><span class="hljs-highlight  keyword">fn</span></code>.</li>
</ul>
<p>You might have gotten used to closures not auto-importing variables for the past decade, but keep in mind this behaviour was only added as a necessity back in the day. All arguments for only using explicit capture have been nullified by time, a great sign that PHP is maturing even more.</p>
<p><div class="author">
    Noticed a tpyo? You can submit a
    <a href="https://github.com/brendt/stitcher.io" target="_blank" rel="noopener noreferrer">PR</a> to fix it.

    If you want to stay up to date about what's happening on this blog, you can follow me
    <a href="https://mobile.twitter.com/brendt_gd" target="_blank" rel="noopener noreferrer">on Twitter</a> or subscribe to my newsletter:

    <form action="https://mail.stitcher.io/subscribe/81fa83d0-4a0b-4eff-b897-f6ce51dfb7f0" method="post" class="newsletter-form">
        <label for="newsletter-email-3">Email</label>
        <input type="email" name="email" id="newsletter-email-3"/>
        <button type="submit" class="cta cta-small">Subscribe</button>
    </form>
</div>
</p>
<p>With all of that being said, I'm looking forward to Nuno and Larry opening the vote on their RFC. PHP 8.1's feature freeze is planned for the 20th of July, 2021; so there's still some time to finalize the details. If you're voting on RFCs, I truly hope you can see the big picture, as this is one of the RFCs that will have a significant impact on many people's developer life.</p>]]></summary>
        <author>
            <name>stitcher.io</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[What&#039;s new in PHP 8.1]]></title>
        <id>https://stitcher.io/blog/new-in-php-81</id>
        <link href="https://stitcher.io/blog/new-in-php-81"/>
        <updated>2021-06-01T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>PHP 8.1 is currently in active development and will be released on <a target="_blank" href="https://wiki.php.net/todo/php81">November 25, 2021</a>. Keep in mind that this date can still change if the core team, for examples, adds an extra beta release. We already know about new features, performance improvements, changes and deprecations; so let's go through them one by one.</p>
<p><div class="sidenote">
    <p>
        Tired of managing servers?
        Check out <a href="https://gumroad.com/a/575280243" ping="https://analytics.stitcher.io/r" target="_blank" rel="noopener noreferrer">Serverless Visually Explained</a> by Matthieu Napoli and learn how to create scalable PHP applications on AWS.
    </p>
</div>
</p>
<h2 id="new-features"><a href="#new-features" class="heading-anchor">#</a> New features</h2>
<p>As with every release, PHP 8.1 adds some nice new features. Keep in mind that this list will grow over the year.</p>
<p><div class="like-container">
    <div class="like unliked hidden">
        👍
    </div>
    <div class="like liked hidden">
        👍 <span class="counter">0</span>
    </div>
</div>
</p>
<h3 id="enums-rfc"><a href="#enums-rfc" class="heading-anchor">#</a> Enums <small><a target="_blank" href="https://wiki.php.net/rfc/enumerations">RFC</a></small></h3>
<p>Enums will be added in PHP 8.1! If you're unsure what they can be used for, you can read about them <a target="_blank" href="/blog/php-enums">here</a>.</p>
<p>Adding enums would be a significant improvement in PHP, so I for one am very much looking forward seeing enums arrive in PHP 8.1. To give you a quick preview of what they will look like, here's a code sample:</p>
<pre><code class="language-php hljs php" data-lang="php"><span class="hljs-highlight  keyword">enum</span> <span class="hljs-highlight  type">Status</span> {
  <span class="hljs-highlight  keyword"><span class="hljs-keyword">case</span></span> <span class="hljs-highlight  prop">Pending</span>;
  <span class="hljs-highlight  keyword"><span class="hljs-keyword">case</span></span> <span class="hljs-highlight  prop">Active</span>;
  <span class="hljs-highlight  keyword"><span class="hljs-keyword">case</span></span> <span class="hljs-highlight  prop">Archived</span>;
}</code></pre>
<p>And this is how they will be used:</p>
<pre><code class="language-php hljs php" data-lang="php"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Post</span>
</span>{
    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span><span class="hljs-params">(
        <span class="hljs-highlight  keyword">private</span> <span class="hljs-highlight  type">Status</span> <span class="hljs-highlight  prop">$status</span> = <span class="hljs-highlight  type">Status</span>::<span class="hljs-highlight  prop">Pending</span>;
    )</span> </span>{}

    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">setStatus</span><span class="hljs-params">(<span class="hljs-highlight  type">Status</span> $status)</span>: <span class="hljs-title">void</span>
    </span>{
        <span class="hljs-comment">// …</span>
    }
}

$post-&gt;<span class="hljs-highlight  prop">setStatus</span>(<span class="hljs-highlight  type">Status</span>::<span class="hljs-highlight  prop">Active</span>);</code></pre>
<p>You can find an in-depth analysis of how to use enums in <a href="/blog/php-enums">this post</a>.</p>
<p><div class="ad-container">
    <script async type="text/javascript" src="//cdn.carbonads.com/carbon.js?serve=CK7ICK3W&placement=stitcherio" id="_carbonads_js"></script>
</div>
</p>
<hr />
<h3 id="fibers-rfc"><a href="#fibers-rfc" class="heading-anchor">#</a> Fibers <small><a target="_blank" href="https://wiki.php.net/rfc/fibers">RFC</a></small></h3>
<p>Fibers — aka <a target="_blank" href="https://en.wikipedia.org/wiki/Green_threads">"green threads"</a> — are a low level mechanism to manage parallelism. You probably won't use them directly in your applications, but frameworks like Amphp and ReactPHP will make extensive use of them.</p>
<p>Here's a simple example of using fibers:</p>
<pre><code class="language-php hljs php" data-lang="php">$fiber = <span class="hljs-keyword">new</span> <span class="hljs-highlight  type">Fiber</span>(<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-params">()</span>: <span class="hljs-highlight  type"><span class="hljs-title">void</span></span> </span>{
    $valueAfterResuming = <span class="hljs-highlight  type">Fiber</span>::<span class="hljs-highlight  prop">suspend</span>(<span class="hljs-string">'after suspending'</span>);
    
    <span class="hljs-comment">// … </span>
});
 
$valueAfterSuspending = $fiber-&gt;<span class="hljs-highlight  prop">start</span>();
 
$fiber-&gt;<span class="hljs-highlight  prop">resume</span>(<span class="hljs-string">'after resuming'</span>);</code></pre>
<p>If you want to read some more about fibers, what they can and can't do, you can read <a href="/blog/fibers-with-a-grain-of-salt">this post</a>.</p>
<hr />
<h3 id="performance-improvements-pr"><a href="#performance-improvements-pr" class="heading-anchor">#</a> Performance improvements <small><a target="_blank" href="https://github.com/php/php-src/pull/6627">PR</a></small></h3>
<p>Dmitry Stogov has added some improvements to opcache, he calls it "<a target="_blank" href="https://github.com/php/php-src/pull/6627">inheritance cache</a>". This feature allows links between classes to be cached, much like linked classes can be <a target="_blank" href="/blog/preloading-in-php-74">preloaded</a> as of PHP 7.4.</p>
<p>Dmitry reports between a 5% and 8% performance increase thanks to this change, a nice little detail to look out for in PHP 8.1.</p>
<hr />
<h3 id="array-unpacking-with-string-keys-rfc"><a href="#array-unpacking-with-string-keys-rfc" class="heading-anchor">#</a> Array unpacking with string keys <small><a target="_blank" href="https://wiki.php.net/rfc/array_unpacking_string_keys">RFC</a></small></h3>
<p>Array unpacking was already allowed in <a href="/blog/new-in-php-74">PHP 7.4</a>, but it only worked with numeric keys. The reason string keys weren't supported before is because there wasn't any consensus on how to merge array duplicates. The RFC cleanly solves this by following the semantics of <code><span class="hljs-highlight  prop">array_merge</span></code>:</p>
<pre><code class="language-php hljs php" data-lang="php">$array1 = [<span class="hljs-string">"a"</span> =&gt; <span class="hljs-number">1</span>];

$array2 = [<span class="hljs-string">"b"</span> =&gt; <span class="hljs-number">2</span>];

$array = [<span class="hljs-string">"a"</span> =&gt; <span class="hljs-number">0</span>, ...$array1, ...$array2];

<span class="hljs-highlight  prop">var_dump</span>($array); <span class="hljs-comment">// ["a" =&gt; 1, "b" =&gt; 2]</span></code></pre>
<hr />
<h3 id="new-never-type-rfc"><a href="#new-never-type-rfc" class="heading-anchor">#</a> New <code><span class="hljs-highlight  type">never</span></code> type <small><a target="_blank" href="https://wiki.php.net/rfc/noreturn_type">RFC</a></small></h3>
<p>The <code><span class="hljs-highlight  type">never</span></code> type can be used to indicated that a function will actually stop the program flow. This can be done either by throwing an exception, calling <code><span class="hljs-highlight  keyword">exit</span></code> or other similar functions.</p>
<pre><code class="language-php hljs php" data-lang="php"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dd</span><span class="hljs-params">(<span class="hljs-highlight  type">mixed</span> $input)</span>: <span class="hljs-title">never</span>
</span>{
    <span class="hljs-comment">// dump</span>
    
    <span class="hljs-keyword">exit</span>;
}</code></pre>
<p><code><span class="hljs-highlight  type">never</span></code> differs from <code><span class="hljs-highlight  type">void</span></code> in that <code><span class="hljs-highlight  type">void</span></code> still allows the program to continue. This might seem like a novelty feature but it's actually a quite useful one for static analysers.</p>
<hr />
<h3 id="new-array_is_list-function-rfc"><a href="#new-array_is_list-function-rfc" class="heading-anchor">#</a> New <code><span class="hljs-highlight  prop">array_is_list</span></code> function <small><a target="_blank" href="https://wiki.php.net/rfc/is_list">RFC</a></small></h3>
<p>You've probably had to deal with this once in a while: determine if an array's keys are in numerical order, starting from index 0. Just like <code><span class="hljs-highlight  prop">json_encode</span></code> decides whether an array should be encoded as an array or object.</p>
<p>PHP 8.1 adds a built-in function to determine whether an array is a list with those semantics, or not:</p>
<pre><code class="language-php hljs php" data-lang="php">$list = [<span class="hljs-string">"a"</span>, <span class="hljs-string">"b"</span>, <span class="hljs-string">"c"</span>];

<span class="hljs-highlight  prop">array_is_list</span>($list); <span class="hljs-comment">// true</span>

$notAList = [<span class="hljs-number">1</span> =&gt; <span class="hljs-string">"a"</span>, <span class="hljs-number">2</span> =&gt; <span class="hljs-string">"b"</span>, <span class="hljs-number">3</span> =&gt; <span class="hljs-string">"c"</span>];

<span class="hljs-highlight  prop">array_is_list</span>($notAList); <span class="hljs-comment">// false</span>

$alsoNotAList = [<span class="hljs-string">"a"</span> =&gt; <span class="hljs-string">"a"</span>, <span class="hljs-string">"b"</span> =&gt; <span class="hljs-string">"b"</span>, <span class="hljs-string">"c"</span> =&gt; <span class="hljs-string">"c"</span>];

<span class="hljs-highlight  prop">array_is_list</span>($alsoNotAList); <span class="hljs-comment">// false</span></code></pre>
<p><div class="sidenote">
    <p>
        Do you want to stay up-to-date about PHP 8.1's development? Subscribe to my newsletter and receive occasional updates:
    </p>

    <form action="https://mail.stitcher.io/subscribe/81fa83d0-4a0b-4eff-b897-f6ce51dfb7f0" method="post" class="newsletter-form">
        <label for="newsletter-email-10">Email</label>
        <input type="email" name="email" id="newsletter-email-10"/>
        <button type="submit" class="cta cta-small">Subscribe</button>
    </form>
</div>
</p>
<hr />
<h3 id="final-class-constants-rfc"><a href="#final-class-constants-rfc" class="heading-anchor">#</a> Final class constants <small><a target="_blank" href="https://wiki.php.net/rfc/final_class_const">RFC</a></small></h3>
<p>Class constants in PHP can be overridden during inheritance:</p>
<pre><code class="language-php hljs php" data-lang="php"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Foo</span>
</span>{
    <span class="hljs-keyword">public</span> <span class="hljs-keyword">const</span> <span class="hljs-highlight  prop">X</span> = <span class="hljs-string">"foo"</span>;
}
 
<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Bar</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Foo</span>
</span>{
    <span class="hljs-keyword">public</span> <span class="hljs-keyword">const</span> <span class="hljs-highlight  prop">X</span> = <span class="hljs-string">"bar"</span>;
}</code></pre>
<p>As of PHP 8.1, you can mark such constants as <code><span class="hljs-highlight  keyword">final</span></code> in order to prevent this:</p>
<pre><code class="language-php hljs php" data-lang="php"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Foo</span>
</span>{
    <span class="hljs-keyword">final</span> <span class="hljs-keyword">public</span> <span class="hljs-keyword">const</span> <span class="hljs-highlight  prop">X</span> = <span class="hljs-string">"foo"</span>;
}
 
<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Bar</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Foo</span>
</span>{
    <span class="hljs-highlight  striped"><span class="hljs-keyword">public</span> <span class="hljs-keyword">const</span> <span class="hljs-highlight  prop">X</span> = <span class="hljs-string">"bar"</span>;</span>
    <span class="hljs-highlight  full error">Fatal error: Bar::X cannot override <span class="hljs-keyword">final</span> constant Foo::X</span>
}</code></pre>
<hr />
<h3 id="new-fsync-function-rfc"><a href="#new-fsync-function-rfc" class="heading-anchor">#</a> New <code><span class="hljs-highlight  prop">fsync</span></code> function <small><a target="_blank" href="https://wiki.php.net/rfc/fsync_function">RFC</a></small></h3>
<p>PHP 8.1 adds the <code><span class="hljs-highlight  prop">fsync</span></code> and <code><span class="hljs-highlight  prop">fdatasync</span></code> functions to force synchronization of file changes to disk and ensure operating system write buffers have been flushed before returning.</p>
<pre><code class="language-php hljs php" data-lang="php">$file = <span class="hljs-highlight  prop">fopen</span>(<span class="hljs-string">"sample.txt"</span>, <span class="hljs-string">"w"</span>);

<span class="hljs-highlight  prop">fwrite</span>($file, <span class="hljs-string">"Some content"</span>);

<span class="hljs-keyword">if</span> (<span class="hljs-highlight  prop">fsync</span>($file)) {
    <span class="hljs-keyword">echo</span> <span class="hljs-string">"File has been successfully persisted to disk."</span>;
}

<span class="hljs-highlight  prop">fclose</span>($file);</code></pre>
<p>Because disk synchronization is a file system operation, the <code><span class="hljs-highlight  prop">fsync</span></code> function will only work on plain file streams. Attempting to sync non-file streams will emit a warning.</p>
<hr />
<h3 id="explicit-octal-integer-literal-notation-rfc"><a href="#explicit-octal-integer-literal-notation-rfc" class="heading-anchor">#</a> Explicit octal integer literal notation <small><a target="_blank" href="https://wiki.php.net/rfc/explicit_octal_notation">RFC</a></small></h3>
<p>You can now use <code>0o</code> and <code>0O</code> to denote octal numbers. The previous notation by prefixing a number with <code>0</code> still works as well.</p>
<pre><code class="language-php hljs php" data-lang="php"><span class="hljs-number">016</span> === <span class="hljs-number">0</span>o16; <span class="hljs-comment">// true</span>
<span class="hljs-number">016</span> === <span class="hljs-number">0</span>O16; <span class="hljs-comment">// true</span></code></pre>
<h2 id="breaking-changes"><a href="#breaking-changes" class="heading-anchor">#</a> Breaking changes</h2>
<p>While PHP 8.1 is a minor version, there will be some changes that might technically be a breaking change, and deprecations as well. Let's discuss them one by one.</p>
<hr />
<h3 id="restrict-$globals-usage-rfc"><a href="#restrict-$globals-usage-rfc" class="heading-anchor">#</a> Restrict <code>$GLOBALS</code> usage <small><a target="_blank" href="https://wiki.php.net/rfc/restrict_globals_usage">RFC</a></small></h3>
<p>A small change to how <code>$GLOBALS</code> is used will have a significant impact on the performance of all array operations. Nikita does a fine job explaining the problem and solution in the <a target="_blank" href="https://wiki.php.net/rfc/restrict_globals_usage">RFC</a>. The change means that some edge cases aren't possible to do any more with <code>$GLOBALS</code>. "<em>What is no longer supported are writes to $GLOBALS taken as a whole. All the following will generate a compile-time error</em>":</p>
<pre><code class="language-php hljs php" data-lang="php">$GLOBALS = [];
$GLOBALS += [];
$GLOBALS =&amp; $x;
$x =&amp; $GLOBALS;
<span class="hljs-keyword">unset</span>($GLOBALS);</code></pre>
<p>On top of that, passing <code>$GLOBALS</code> by reference will generate a runtime error:</p>
<pre><code class="language-php hljs php" data-lang="php"><span class="hljs-highlight  prop">by_ref</span>($GLOBALS); <span class="hljs-comment">// Run-time error</span></code></pre>
<p>Nikita analysed the top 2000 packages on Packagist, and only found 23 cases that will be affected by this change. We can conclude the impact of this — technically breaking — change will be low, which is why internals decided to add it in PHP 8.1. Remember that most of us will win by this change, given the positive performance impact it has everywhere in our code.</p>
<hr />
<h3 id="resource-to-object-migrations"><a href="#resource-to-object-migrations" class="heading-anchor">#</a> Resource to object migrations</h3>
<p>These changes are part of the long-term vision to convert all resources to dedicated objects. You can read more about it <a target="_blank" href="https://github.com/php/php-tasks/issues/6">here</a>.</p>
<p><strong>Fileinfo functions with <code><span class="hljs-highlight  type">finfo</span></code> objects</strong></p>
<p>Functions like <code><span class="hljs-highlight  prop">finfo_file</span></code> and <code><span class="hljs-highlight  prop">finfo_open</span></code> used to accept and return resources. As of PHP 8.1, they work with <a target="_blank" href="https://www.php.net/manual/en/class.finfo.php"><code><span class="hljs-highlight  type">finfo</span></code></a> objects.</p>
<p><strong>IMAP functions with <code><span class="hljs-highlight  type">IMAPConnection</span></code> objects</strong></p>
<p>Just like the fileinfo change, IMAP functions like <code><span class="hljs-highlight  prop">imap_body</span></code> and <code><span class="hljs-highlight  prop">imap_open</span></code> no longer work with resources</p>
<hr />
<h3 id="deprecate-passing-null-to-non-nullable-arguments-of-internal-functions-rfc"><a href="#deprecate-passing-null-to-non-nullable-arguments-of-internal-functions-rfc" class="heading-anchor">#</a> Deprecate passing null to non-nullable arguments of internal functions <small><a target="_blank" href="https://wiki.php.net/rfc/deprecate_null_to_scalar_internal_arg">RFC</a></small></h3>
<p>This change is simple: internal functions currently accept <code>null</code> for arguments that are non-nullable, this RFC deprecates that behaviour. For example, this is currently possible:</p>
<pre><code class="language-php hljs php" data-lang="php"><span class="hljs-highlight  prop">str_contains</span>(<span class="hljs-string">"string"</span>, <span class="hljs-highlight  striped"><span class="hljs-keyword">null</span></span>);</code></pre>
<p>In PHP 8.1, these kinds of errors will throw a deprecation warning, in PHP 9 they will be converted to type errors.</p>
<hr />
<h3 id="other-small-changes"><a href="#other-small-changes" class="heading-anchor">#</a> Other small changes</h3>
<p>With every release, there's a bunch of very minor changes to the language. All of them are listed in the <a target="_blank" href="https://github.com/php/php-src/blob/master/UPGRADING">UPGRADING</a> guide on GitHub, make sure to check it out if you want to know every little detail.</p>
<p>Here's a summary of the most significant changes:</p>
<ul>
<li>
<code><span class="hljs-highlight  prop">MYSQLI_STMT_ATTR_UPDATE_MAX_LENGTH</span></code> no longer has an effect</li>
<li>
<code><span class="hljs-highlight  prop">MYSQLI_STORE_RESULT_COPY_DATA</span></code> no longer has an effect</li>
<li>
<hljs type>PDO</hljs>::<hljs prop>ATTR_STRINGIFY_FETCHES</hljs> now also works with booleans</li>
<li>Integers and floats in PDO MySQL and Sqlite result sets will be returned using native PHP types instead of strings when using emulated prepared statements</li>
<li>Functions like <code><span class="hljs-highlight  prop">htmlspecialchars</span></code> and <code><span class="hljs-highlight  prop">htmlentities</span></code> now also escape <code>'</code> by default to <code>&amp;#039;</code>; malformed UTF-8 will also be replaced with a unicode character, instead of resulting in an empty string</li>
<li>The <code><span class="hljs-highlight  prop">hash</span></code>, <code><span class="hljs-highlight  prop">hash_file</span></code> and <code><span class="hljs-highlight  prop">hash_init</span></code> have an extra argument added to them called <code>$options</code>, it has a default value of <code>[]</code> so it won't affect your code</li>
<li>New support for <code>MurmurHash3</code> and <code>xxHash</code>
</li>
</ul>
<hr />
<p>That's it for now, keep in mind I'll regularly update this post during the year, so make sure to <a href="/newsletter/subscribe">subscribe</a> if you want to be kept in the loop. Are you excited for PHP 8.1? Let me know on <a target="_blank" href="https://twitter.com/brendt_gd">Twitter</a>!</p>
<p><div class="author">
    Noticed a tpyo? You can submit a
    <a href="https://github.com/brendt/stitcher.io" target="_blank" rel="noopener noreferrer">PR</a> to fix it.

    If you want to stay up to date about what's happening on this blog, you can follow me
    <a href="https://mobile.twitter.com/brendt_gd" target="_blank" rel="noopener noreferrer">on Twitter</a> or subscribe to my newsletter:

    <form action="https://mail.stitcher.io/subscribe/81fa83d0-4a0b-4eff-b897-f6ce51dfb7f0" method="post" class="newsletter-form">
        <label for="newsletter-email-11">Email</label>
        <input type="email" name="email" id="newsletter-email-11"/>
        <button type="submit" class="cta cta-small">Subscribe</button>
    </form>
</div>
</p>]]></summary>
        <author>
            <name>stitcher.io</name>
        </author>
    </entry>
</feed>